/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutAboutImport } from './routes/_layout/about'
import { Route as LayoutPlansIndexImport } from './routes/_layout/plans/index'
import { Route as LayoutExerciseIndexImport } from './routes/_layout/exercise/index'
import { Route as LayoutExerciseExerciseIdImport } from './routes/_layout/exercise/$exerciseId'
import { Route as LayoutPlansPlanIdIndexImport } from './routes/_layout/plans/$planId/index'
import { Route as LayoutPlansPlanIdWeekIdIndexImport } from './routes/_layout/plans/$planId/$weekId/index'
import { Route as LayoutPlansPlanIdWeekIdDayIdIndexImport } from './routes/_layout/plans/$planId/$weekId/$dayId/index'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAboutRoute = LayoutAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutPlansIndexRoute = LayoutPlansIndexImport.update({
  id: '/plans/',
  path: '/plans/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutExerciseIndexRoute = LayoutExerciseIndexImport.update({
  id: '/exercise/',
  path: '/exercise/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutExerciseExerciseIdRoute = LayoutExerciseExerciseIdImport.update({
  id: '/exercise/$exerciseId',
  path: '/exercise/$exerciseId',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutPlansPlanIdIndexRoute = LayoutPlansPlanIdIndexImport.update({
  id: '/plans/$planId/',
  path: '/plans/$planId/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutPlansPlanIdWeekIdIndexRoute =
  LayoutPlansPlanIdWeekIdIndexImport.update({
    id: '/plans/$planId/$weekId/',
    path: '/plans/$planId/$weekId/',
    getParentRoute: () => LayoutRoute,
  } as any)

const LayoutPlansPlanIdWeekIdDayIdIndexRoute =
  LayoutPlansPlanIdWeekIdDayIdIndexImport.update({
    id: '/plans/$planId/$weekId/$dayId/',
    path: '/plans/$planId/$weekId/$dayId/',
    getParentRoute: () => LayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/about': {
      id: '/_layout/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof LayoutAboutImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/exercise/$exerciseId': {
      id: '/_layout/exercise/$exerciseId'
      path: '/exercise/$exerciseId'
      fullPath: '/exercise/$exerciseId'
      preLoaderRoute: typeof LayoutExerciseExerciseIdImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/exercise/': {
      id: '/_layout/exercise/'
      path: '/exercise'
      fullPath: '/exercise'
      preLoaderRoute: typeof LayoutExerciseIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/plans/': {
      id: '/_layout/plans/'
      path: '/plans'
      fullPath: '/plans'
      preLoaderRoute: typeof LayoutPlansIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/plans/$planId/': {
      id: '/_layout/plans/$planId/'
      path: '/plans/$planId'
      fullPath: '/plans/$planId'
      preLoaderRoute: typeof LayoutPlansPlanIdIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/plans/$planId/$weekId/': {
      id: '/_layout/plans/$planId/$weekId/'
      path: '/plans/$planId/$weekId'
      fullPath: '/plans/$planId/$weekId'
      preLoaderRoute: typeof LayoutPlansPlanIdWeekIdIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/plans/$planId/$weekId/$dayId/': {
      id: '/_layout/plans/$planId/$weekId/$dayId/'
      path: '/plans/$planId/$weekId/$dayId'
      fullPath: '/plans/$planId/$weekId/$dayId'
      preLoaderRoute: typeof LayoutPlansPlanIdWeekIdDayIdIndexImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutAboutRoute: typeof LayoutAboutRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutExerciseExerciseIdRoute: typeof LayoutExerciseExerciseIdRoute
  LayoutExerciseIndexRoute: typeof LayoutExerciseIndexRoute
  LayoutPlansIndexRoute: typeof LayoutPlansIndexRoute
  LayoutPlansPlanIdIndexRoute: typeof LayoutPlansPlanIdIndexRoute
  LayoutPlansPlanIdWeekIdIndexRoute: typeof LayoutPlansPlanIdWeekIdIndexRoute
  LayoutPlansPlanIdWeekIdDayIdIndexRoute: typeof LayoutPlansPlanIdWeekIdDayIdIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutAboutRoute: LayoutAboutRoute,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutExerciseExerciseIdRoute: LayoutExerciseExerciseIdRoute,
  LayoutExerciseIndexRoute: LayoutExerciseIndexRoute,
  LayoutPlansIndexRoute: LayoutPlansIndexRoute,
  LayoutPlansPlanIdIndexRoute: LayoutPlansPlanIdIndexRoute,
  LayoutPlansPlanIdWeekIdIndexRoute: LayoutPlansPlanIdWeekIdIndexRoute,
  LayoutPlansPlanIdWeekIdDayIdIndexRoute:
    LayoutPlansPlanIdWeekIdDayIdIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/about': typeof LayoutAboutRoute
  '/': typeof LayoutIndexRoute
  '/exercise/$exerciseId': typeof LayoutExerciseExerciseIdRoute
  '/exercise': typeof LayoutExerciseIndexRoute
  '/plans': typeof LayoutPlansIndexRoute
  '/plans/$planId': typeof LayoutPlansPlanIdIndexRoute
  '/plans/$planId/$weekId': typeof LayoutPlansPlanIdWeekIdIndexRoute
  '/plans/$planId/$weekId/$dayId': typeof LayoutPlansPlanIdWeekIdDayIdIndexRoute
}

export interface FileRoutesByTo {
  '/about': typeof LayoutAboutRoute
  '/': typeof LayoutIndexRoute
  '/exercise/$exerciseId': typeof LayoutExerciseExerciseIdRoute
  '/exercise': typeof LayoutExerciseIndexRoute
  '/plans': typeof LayoutPlansIndexRoute
  '/plans/$planId': typeof LayoutPlansPlanIdIndexRoute
  '/plans/$planId/$weekId': typeof LayoutPlansPlanIdWeekIdIndexRoute
  '/plans/$planId/$weekId/$dayId': typeof LayoutPlansPlanIdWeekIdDayIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/about': typeof LayoutAboutRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/exercise/$exerciseId': typeof LayoutExerciseExerciseIdRoute
  '/_layout/exercise/': typeof LayoutExerciseIndexRoute
  '/_layout/plans/': typeof LayoutPlansIndexRoute
  '/_layout/plans/$planId/': typeof LayoutPlansPlanIdIndexRoute
  '/_layout/plans/$planId/$weekId/': typeof LayoutPlansPlanIdWeekIdIndexRoute
  '/_layout/plans/$planId/$weekId/$dayId/': typeof LayoutPlansPlanIdWeekIdDayIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/about'
    | '/'
    | '/exercise/$exerciseId'
    | '/exercise'
    | '/plans'
    | '/plans/$planId'
    | '/plans/$planId/$weekId'
    | '/plans/$planId/$weekId/$dayId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/about'
    | '/'
    | '/exercise/$exerciseId'
    | '/exercise'
    | '/plans'
    | '/plans/$planId'
    | '/plans/$planId/$weekId'
    | '/plans/$planId/$weekId/$dayId'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/about'
    | '/_layout/'
    | '/_layout/exercise/$exerciseId'
    | '/_layout/exercise/'
    | '/_layout/plans/'
    | '/_layout/plans/$planId/'
    | '/_layout/plans/$planId/$weekId/'
    | '/_layout/plans/$planId/$weekId/$dayId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/about",
        "/_layout/",
        "/_layout/exercise/$exerciseId",
        "/_layout/exercise/",
        "/_layout/plans/",
        "/_layout/plans/$planId/",
        "/_layout/plans/$planId/$weekId/",
        "/_layout/plans/$planId/$weekId/$dayId/"
      ]
    },
    "/_layout/about": {
      "filePath": "_layout/about.tsx",
      "parent": "/_layout"
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/exercise/$exerciseId": {
      "filePath": "_layout/exercise/$exerciseId.tsx",
      "parent": "/_layout"
    },
    "/_layout/exercise/": {
      "filePath": "_layout/exercise/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/plans/": {
      "filePath": "_layout/plans/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/plans/$planId/": {
      "filePath": "_layout/plans/$planId/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/plans/$planId/$weekId/": {
      "filePath": "_layout/plans/$planId/$weekId/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/plans/$planId/$weekId/$dayId/": {
      "filePath": "_layout/plans/$planId/$weekId/$dayId/index.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
