/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutAboutImport } from './routes/_layout/about'
import { Route as LayoutWorkspaceIndexImport } from './routes/_layout/workspace/index'
import { Route as LayoutTeamsIndexImport } from './routes/_layout/teams/index'
import { Route as LayoutSettingsIndexImport } from './routes/_layout/settings/index'
import { Route as LayoutExerciseIndexImport } from './routes/_layout/exercise/index'
import { Route as LayoutTeamsTeamIdIndexImport } from './routes/_layout/teams/$teamId/index'
import { Route as LayoutExerciseExerciseIdIndexImport } from './routes/_layout/exercise/$exerciseId/index'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAboutRoute = LayoutAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutWorkspaceIndexRoute = LayoutWorkspaceIndexImport.update({
  id: '/workspace/',
  path: '/workspace/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTeamsIndexRoute = LayoutTeamsIndexImport.update({
  id: '/teams/',
  path: '/teams/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSettingsIndexRoute = LayoutSettingsIndexImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutExerciseIndexRoute = LayoutExerciseIndexImport.update({
  id: '/exercise/',
  path: '/exercise/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTeamsTeamIdIndexRoute = LayoutTeamsTeamIdIndexImport.update({
  id: '/teams/$teamId/',
  path: '/teams/$teamId/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutExerciseExerciseIdIndexRoute =
  LayoutExerciseExerciseIdIndexImport.update({
    id: '/exercise/$exerciseId/',
    path: '/exercise/$exerciseId/',
    getParentRoute: () => LayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/about': {
      id: '/_layout/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof LayoutAboutImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/exercise/': {
      id: '/_layout/exercise/'
      path: '/exercise'
      fullPath: '/exercise'
      preLoaderRoute: typeof LayoutExerciseIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/settings/': {
      id: '/_layout/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof LayoutSettingsIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/teams/': {
      id: '/_layout/teams/'
      path: '/teams'
      fullPath: '/teams'
      preLoaderRoute: typeof LayoutTeamsIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/workspace/': {
      id: '/_layout/workspace/'
      path: '/workspace'
      fullPath: '/workspace'
      preLoaderRoute: typeof LayoutWorkspaceIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/exercise/$exerciseId/': {
      id: '/_layout/exercise/$exerciseId/'
      path: '/exercise/$exerciseId'
      fullPath: '/exercise/$exerciseId'
      preLoaderRoute: typeof LayoutExerciseExerciseIdIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/teams/$teamId/': {
      id: '/_layout/teams/$teamId/'
      path: '/teams/$teamId'
      fullPath: '/teams/$teamId'
      preLoaderRoute: typeof LayoutTeamsTeamIdIndexImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutAboutRoute: typeof LayoutAboutRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutExerciseIndexRoute: typeof LayoutExerciseIndexRoute
  LayoutSettingsIndexRoute: typeof LayoutSettingsIndexRoute
  LayoutTeamsIndexRoute: typeof LayoutTeamsIndexRoute
  LayoutWorkspaceIndexRoute: typeof LayoutWorkspaceIndexRoute
  LayoutExerciseExerciseIdIndexRoute: typeof LayoutExerciseExerciseIdIndexRoute
  LayoutTeamsTeamIdIndexRoute: typeof LayoutTeamsTeamIdIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutAboutRoute: LayoutAboutRoute,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutExerciseIndexRoute: LayoutExerciseIndexRoute,
  LayoutSettingsIndexRoute: LayoutSettingsIndexRoute,
  LayoutTeamsIndexRoute: LayoutTeamsIndexRoute,
  LayoutWorkspaceIndexRoute: LayoutWorkspaceIndexRoute,
  LayoutExerciseExerciseIdIndexRoute: LayoutExerciseExerciseIdIndexRoute,
  LayoutTeamsTeamIdIndexRoute: LayoutTeamsTeamIdIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/about': typeof LayoutAboutRoute
  '/': typeof LayoutIndexRoute
  '/exercise': typeof LayoutExerciseIndexRoute
  '/settings': typeof LayoutSettingsIndexRoute
  '/teams': typeof LayoutTeamsIndexRoute
  '/workspace': typeof LayoutWorkspaceIndexRoute
  '/exercise/$exerciseId': typeof LayoutExerciseExerciseIdIndexRoute
  '/teams/$teamId': typeof LayoutTeamsTeamIdIndexRoute
}

export interface FileRoutesByTo {
  '/about': typeof LayoutAboutRoute
  '/': typeof LayoutIndexRoute
  '/exercise': typeof LayoutExerciseIndexRoute
  '/settings': typeof LayoutSettingsIndexRoute
  '/teams': typeof LayoutTeamsIndexRoute
  '/workspace': typeof LayoutWorkspaceIndexRoute
  '/exercise/$exerciseId': typeof LayoutExerciseExerciseIdIndexRoute
  '/teams/$teamId': typeof LayoutTeamsTeamIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/about': typeof LayoutAboutRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/exercise/': typeof LayoutExerciseIndexRoute
  '/_layout/settings/': typeof LayoutSettingsIndexRoute
  '/_layout/teams/': typeof LayoutTeamsIndexRoute
  '/_layout/workspace/': typeof LayoutWorkspaceIndexRoute
  '/_layout/exercise/$exerciseId/': typeof LayoutExerciseExerciseIdIndexRoute
  '/_layout/teams/$teamId/': typeof LayoutTeamsTeamIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/about'
    | '/'
    | '/exercise'
    | '/settings'
    | '/teams'
    | '/workspace'
    | '/exercise/$exerciseId'
    | '/teams/$teamId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/about'
    | '/'
    | '/exercise'
    | '/settings'
    | '/teams'
    | '/workspace'
    | '/exercise/$exerciseId'
    | '/teams/$teamId'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/about'
    | '/_layout/'
    | '/_layout/exercise/'
    | '/_layout/settings/'
    | '/_layout/teams/'
    | '/_layout/workspace/'
    | '/_layout/exercise/$exerciseId/'
    | '/_layout/teams/$teamId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/about",
        "/_layout/",
        "/_layout/exercise/",
        "/_layout/settings/",
        "/_layout/teams/",
        "/_layout/workspace/",
        "/_layout/exercise/$exerciseId/",
        "/_layout/teams/$teamId/"
      ]
    },
    "/_layout/about": {
      "filePath": "_layout/about.tsx",
      "parent": "/_layout"
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/exercise/": {
      "filePath": "_layout/exercise/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/settings/": {
      "filePath": "_layout/settings/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/teams/": {
      "filePath": "_layout/teams/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/workspace/": {
      "filePath": "_layout/workspace/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/exercise/$exerciseId/": {
      "filePath": "_layout/exercise/$exerciseId/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/teams/$teamId/": {
      "filePath": "_layout/teams/$teamId/index.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
