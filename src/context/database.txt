-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.exercise_muscle (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  exercise_id uuid NOT NULL,
  muscle_group USER-DEFINED NOT NULL,
  engagement_level USER-DEFINED NOT NULL DEFAULT 'primary'::engagement_level,
  CONSTRAINT exercise_muscle_pkey PRIMARY KEY (id),
  CONSTRAINT exercise_muscle_exercise_id_fkey FOREIGN KEY (exercise_id) REFERENCES public.exercises(id)
);
CREATE TABLE public.exercise_reference_global (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  exercise_id uuid NOT NULL,
  source USER-DEFINED NOT NULL,
  created_by uuid NOT NULL DEFAULT auth.uid(),
  url text NOT NULL,
  title text NOT NULL DEFAULT 'URL Title'::text,
  CONSTRAINT exercise_reference_global_pkey PRIMARY KEY (id),
  CONSTRAINT exercise_reference_global_exercise_id_fkey FOREIGN KEY (exercise_id) REFERENCES public.exercises(id),
  CONSTRAINT exercise_reference_global_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.exercise_saved_references (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  global_reference uuid NOT NULL,
  user_id uuid NOT NULL DEFAULT auth.uid(),
  exercise_id uuid NOT NULL,
  CONSTRAINT exercise_saved_references_pkey PRIMARY KEY (id),
  CONSTRAINT exercise_saved_references_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT exercise_saved_references_exercise_id_fkey FOREIGN KEY (exercise_id) REFERENCES public.exercises(id),
  CONSTRAINT exercise_saved_references_global_reference_fkey FOREIGN KEY (global_reference) REFERENCES public.exercise_reference_global(id)
);
CREATE TABLE public.exercise_tags (
  exercise_id uuid NOT NULL,
  tag_id integer NOT NULL,
  CONSTRAINT exercise_tags_pkey PRIMARY KEY (exercise_id, tag_id),
  CONSTRAINT exercise_tags_exercise_id_fkey FOREIGN KEY (exercise_id) REFERENCES public.exercises(id),
  CONSTRAINT exercise_tags_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES public.tags(id)
);
CREATE TABLE public.exercises (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  instructions text,
  difficulty_level smallint CHECK (difficulty_level >= 1 AND difficulty_level <= 5),
  image_url character varying,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT exercises_pkey PRIMARY KEY (id),
  CONSTRAINT exercises_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.plan_days (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  plan_week_id uuid NOT NULL,
  day_number smallint NOT NULL CHECK (day_number >= 1 AND day_number <= 7),
  title character varying,
  description text,
  is_rest_day boolean DEFAULT false,
  CONSTRAINT plan_days_pkey PRIMARY KEY (id),
  CONSTRAINT plan_days_plan_week_id_fkey FOREIGN KEY (plan_week_id) REFERENCES public.plan_weeks(id)
);
CREATE TABLE public.plan_goals (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  plan_id uuid NOT NULL,
  title text NOT NULL,
  description text,
  metric USER-DEFINED NOT NULL,
  target_value numeric NOT NULL,
  exercise_id uuid,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  target_type USER-DEFINED NOT NULL,
  direction USER-DEFINED NOT NULL,
  CONSTRAINT plan_goals_pkey PRIMARY KEY (id),
  CONSTRAINT plan_goals_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.plans(id),
  CONSTRAINT plan_goals_exercise_id_fkey FOREIGN KEY (exercise_id) REFERENCES public.exercises(id)
);
CREATE TABLE public.plan_session_exercise_sets (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  plan_session_exercise_id uuid NOT NULL,
  set_number smallint NOT NULL CHECK (set_number > 0),
  target_reps smallint CHECK (target_reps >= 0),
  target_weight numeric CHECK (target_weight >= 0::numeric),
  target_duration_seconds integer CHECK (target_duration_seconds >= 0),
  target_distance_meters numeric CHECK (target_distance_meters >= 0::numeric),
  target_rest_seconds integer CHECK (target_rest_seconds >= 0),
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  target_weight_unit USER-DEFINED,
  set_type USER-DEFINED NOT NULL DEFAULT 'normal'::set_type,
  metadata jsonb,
  intent USER-DEFINED,
  CONSTRAINT plan_session_exercise_sets_pkey PRIMARY KEY (id),
  CONSTRAINT plan_session_exercise_sets_plan_session_exercise_id_fkey FOREIGN KEY (plan_session_exercise_id) REFERENCES public.plan_session_exercises(id)
);
CREATE TABLE public.plan_session_exercises (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  plan_session_id uuid NOT NULL,
  exercise_id uuid NOT NULL,
  order_within_session smallint NOT NULL CHECK (order_within_session > 0),
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  execution_group smallint NOT NULL DEFAULT 1,
  post_exercise_rest_seconds integer NOT NULL DEFAULT 0 CHECK (post_exercise_rest_seconds >= 0),
  post_group_rest_seconds integer NOT NULL DEFAULT 0 CHECK (post_group_rest_seconds >= 0),
  CONSTRAINT plan_session_exercises_pkey PRIMARY KEY (id),
  CONSTRAINT plan_session_exercises_plan_session_id_fkey FOREIGN KEY (plan_session_id) REFERENCES public.plan_sessions(id),
  CONSTRAINT plan_session_exercises_exercise_id_fkey FOREIGN KEY (exercise_id) REFERENCES public.exercises(id)
);
CREATE TABLE public.plan_sessions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  plan_day_id uuid NOT NULL,
  order_index smallint NOT NULL DEFAULT 1 CHECK (order_index > 0),
  title character varying,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT plan_sessions_pkey PRIMARY KEY (id),
  CONSTRAINT plan_sessions_plan_day_id_fkey FOREIGN KEY (plan_day_id) REFERENCES public.plan_days(id)
);
CREATE TABLE public.plan_weeks (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  plan_id uuid NOT NULL,
  week_number smallint NOT NULL CHECK (week_number > 0),
  description text,
  CONSTRAINT plan_weeks_pkey PRIMARY KEY (id),
  CONSTRAINT plan_weeks_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.plans(id)
);
CREATE TABLE public.plans (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  title character varying NOT NULL,
  description text,
  difficulty_level smallint CHECK (difficulty_level >= 1 AND difficulty_level <= 5),
  created_by uuid NOT NULL DEFAULT auth.uid(),
  team_id uuid,
  allow_public_forking boolean NOT NULL DEFAULT false,
  fork_count integer DEFAULT 0,
  like_count integer DEFAULT 0,
  forked_from uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  private boolean NOT NULL DEFAULT false,
  CONSTRAINT plans_pkey PRIMARY KEY (id),
  CONSTRAINT plans_created_by_fkey1 FOREIGN KEY (created_by) REFERENCES public.profiles(id),
  CONSTRAINT plans_forked_from_fkey FOREIGN KEY (forked_from) REFERENCES public.plans(id),
  CONSTRAINT plans_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(id),
  CONSTRAINT plans_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  username character varying NOT NULL UNIQUE,
  full_name character varying,
  bio text,
  profile_image_url character varying,
  updated_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  unit USER-DEFINED NOT NULL DEFAULT 'metric'::measure_unit,
  email text,
  onboarding_completed boolean NOT NULL DEFAULT false,
  current_workspace_id uuid,
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_current_workspace_id_fkey FOREIGN KEY (current_workspace_id) REFERENCES public.teams(id)
);
CREATE TABLE public.session_exercise_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  session_log_id uuid NOT NULL,
  plan_session_exercise_id uuid,
  exercise_id uuid NOT NULL,
  notes text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT session_exercise_logs_pkey PRIMARY KEY (id),
  CONSTRAINT session_exercise_logs_plan_session_exercise_id_fkey FOREIGN KEY (plan_session_exercise_id) REFERENCES public.plan_session_exercises(id),
  CONSTRAINT session_exercise_logs_session_log_id_fkey FOREIGN KEY (session_log_id) REFERENCES public.session_logs(id),
  CONSTRAINT session_exercise_logs_exercise_id_fkey FOREIGN KEY (exercise_id) REFERENCES public.exercises(id)
);
CREATE TABLE public.session_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  date date NOT NULL,
  title character varying,
  notes text,
  duration_minutes integer,
  overall_feeling smallint CHECK (overall_feeling >= 1 AND overall_feeling <= 5),
  privacy_level character varying DEFAULT 'private'::character varying CHECK (privacy_level::text = ANY (ARRAY['private'::character varying::text, 'team'::character varying::text, 'public'::character varying::text])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  plan_session_id uuid,
  status USER-DEFINED NOT NULL DEFAULT 'in_progress'::workout_status_enum,
  plan_id uuid,
  CONSTRAINT session_logs_pkey PRIMARY KEY (id),
  CONSTRAINT workout_logs_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT workout_logs_session_id_fkey FOREIGN KEY (plan_session_id) REFERENCES public.plan_sessions(id),
  CONSTRAINT session_logs_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.plans(id)
);
CREATE TABLE public.set_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  set_number smallint NOT NULL CHECK (set_number > 0),
  reps_performed smallint,
  weight_used numeric,
  weight_unit character varying DEFAULT 'kg'::character varying,
  duration_seconds integer,
  distance_meters numeric,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  session_exercise_log_id uuid NOT NULL,
  performance_metadata jsonb,
  CONSTRAINT set_logs_pkey PRIMARY KEY (id),
  CONSTRAINT set_logs_session_exercise_log_id_fkey FOREIGN KEY (session_exercise_log_id) REFERENCES public.session_exercise_logs(id)
);
CREATE TABLE public.tags (
  id integer NOT NULL DEFAULT nextval('tags_id_seq'::regclass),
  name text NOT NULL UNIQUE,
  tag_type text NOT NULL,
  CONSTRAINT tags_pkey PRIMARY KEY (id)
);
CREATE TABLE public.team_invitations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  team_id uuid NOT NULL,
  invited_by uuid NOT NULL,
  invited_user_id uuid,
  invited_email text,
  role USER-DEFINED NOT NULL,
  status USER-DEFINED NOT NULL DEFAULT 'pending'::invitation_status,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT team_invitations_pkey PRIMARY KEY (id),
  CONSTRAINT team_invitations_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(id),
  CONSTRAINT team_invitations_invited_user_id_fkey FOREIGN KEY (invited_user_id) REFERENCES public.profiles(id),
  CONSTRAINT team_invitations_invited_by_fkey FOREIGN KEY (invited_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.team_members (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  team_id uuid NOT NULL,
  user_id uuid NOT NULL,
  role USER-DEFINED NOT NULL,
  joined_at timestamp with time zone DEFAULT now(),
  CONSTRAINT team_members_pkey PRIMARY KEY (id),
  CONSTRAINT team_members_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(id),
  CONSTRAINT team_members_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.teams (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  logo_url character varying,
  sport character varying,
  is_private boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  is_personal_workspace boolean NOT NULL DEFAULT false,
  CONSTRAINT teams_pkey PRIMARY KEY (id),
  CONSTRAINT teams_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.user_measurements (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  measurement_date date NOT NULL DEFAULT CURRENT_DATE,
  weight_kg numeric,
  height_cm numeric,
  body_fat_percentage numeric,
  body_fat_photo_url text,
  resting_heart_rate integer,
  biceps_left_cm numeric,
  biceps_left_photo_url text,
  biceps_right_cm numeric,
  biceps_right_photo_url text,
  waist_cm numeric,
  waist_photo_url text,
  chest_cm numeric,
  chest_photo_url text,
  thigh_left_cm numeric,
  thigh_left_photo_url text,
  thigh_right_cm numeric,
  thigh_right_photo_url text,
  calf_left_cm numeric,
  calf_left_photo_url text,
  calf_right_cm numeric,
  calf_right_photo_url text,
  hips_cm numeric,
  hips_photo_url text,
  forearm_left_cm numeric,
  forearm_left_photo_url text,
  forearm_right_cm numeric,
  forearm_right_photo_url text,
  overall_notes text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_measurements_pkey PRIMARY KEY (id),
  CONSTRAINT user_measurements_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.user_plan_goal_progress (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  plan_goal_id uuid NOT NULL,
  start_value numeric,
  current_value numeric,
  status USER-DEFINED NOT NULL DEFAULT 'in_progress'::goal_status,
  achieved_at timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  target_value numeric,
  plan_id uuid,
  CONSTRAINT user_plan_goal_progress_pkey PRIMARY KEY (id),
  CONSTRAINT user_plan_goal_progress_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.plans(id),
  CONSTRAINT user_plan_goal_progress_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT user_plan_goal_progress_plan_goal_id_fkey FOREIGN KEY (plan_goal_id) REFERENCES public.plan_goals(id)
);
CREATE TABLE public.user_plan_status (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  plan_id uuid NOT NULL,
  status USER-DEFINED NOT NULL DEFAULT 'active'::plan_status,
  started_at timestamp with time zone NOT NULL DEFAULT now(),
  last_activity_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT user_plan_status_pkey PRIMARY KEY (id),
  CONSTRAINT user_plan_status_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.plans(id),
  CONSTRAINT user_plan_status_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);